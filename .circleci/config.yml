# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
commands:
  #Think of like Functions for CircleCI
  print_pipeline_id:
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs
jobs:
  print_hello:
    #The contain that holds the computing environment
    docker:
      - image: circleci/node:13.8.0
    # The actions to take in a job
    steps:
    # Notice that I didn't add the name of the step here, so can't see it in the pipeline
      - run: echo hello
  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: 
          name: "Echo World"
          command: echo world
  print_author:
    docker:
      - image: cimg/base:2020.01 #Used a different container image
    steps:
      - checkout # Checks out the source code. Common to have this in all jobs in CI.
      - run: 
          name: "Echo Author Name" # name of the step
          command: |
            echo The author of this project is $AUTHOR
  #practicing sharing data with cache and workspaces
  # Persisting data resource: https://circleci.com/docs/2.0/persist-data/#using-workspaces
  save_hello_world_output:
    docker:
      - image: alpine:latest
    steps:
      #- checkout
      - run:
          name: "Create Output File"
          command: |
            echo "Hello world. We are testing workspaces. Should be available for 15 days" > ~/output.txt
      - persist_to_workspace:
          root: ~/ # This path should be the same as the path specified in the `at` argument for attach_workspace, if you want access a file from that root path.``
          paths:
            - output.txt
  print_output_file:
    docker:
      - image: alpine:latest
    steps:
      #- checkout
      - attach_workspace:
          at: ~/
      - run: cat ~/output.txt
  job_print_pipeline_id:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - welcome/run
      - print_author
      - print_hello
      - print_world:
          requires: # Defines the order (DAG)
            - print_hello
      - save_hello_world_output
      - print_output_file
      - job_print_pipeline_id
